<?php

/**
 * This is the model base class for the table "award".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Award".
 *
 * Columns in table "award" available as properties of the model,
 * followed by relations of table "award" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $award_replace_id
 *
 * @property Award $awardReplace
 * @property Award[] $awards
 * @property User[] $users
 */
abstract class BaseAward extends AActiveRecord
{

    public function getTextColumns()
    {
        return array();
    }

    public function tableName()
    {
        return 'award';
    }

    public static function label($n = 1)
    {
        return Yii::t('admin', 'Award|Awards', $n);
    }

    public static function representingColumn()
    {
        return 'name';
    }

    public function rules()
    {
        return array(
            array('name', 'length', 'max'=>64),
            array('award_replace_id', 'length', 'max'=>10),
            array('name, award_replace_id', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, name, award_replace_id', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'awardReplace' => array(self::BELONGS_TO, 'Award', 'award_replace_id'),
            'awards' => array(self::HAS_MANY, 'Award', 'award_replace_id'),
            'users' => array(self::MANY_MANY, 'User', 'user_award(award_id, user_id)'),
        );
    }

    public function pivotModels()
    {
        return array(
            'users' => 'UserAward',
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'award_replace_id' => null,
            'awardReplace' => null,
            'awards' => null,
            'users' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id, true);
        $criteria->compare('name', $this->name, true);
        $criteria->compare('award_replace_id', $this->award_replace_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}