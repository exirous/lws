<?php

/**
 * This is the model base class for the table "forum_topic".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ForumTopic".
 *
 * Columns in table "forum_topic" available as properties of the model,
 * followed by relations of table "forum_topic" available as properties of the model.
 *
 * @property string $id
 * @property string $title
 * @property string $author_id
 * @property string $time
 * @property string $last_message_id
 * @property string $first_message_id
 *
 * @property ForumMessage[] $forumMessages
 * @property ForumMessage $firstMessage
 * @property User $author
 * @property ForumMessage $lastMessage
 */
abstract class BaseForumTopic extends AActiveRecord
{

    public function getTextColumns()
    {
        return array();
    }

    public function tableName()
    {
        return 'forum_topic';
    }

    public static function label($n = 1)
    {
        return Yii::t('admin', 'ForumTopic|ForumTopics', $n);
    }

    public static function representingColumn()
    {
        return 'title';
    }

    public function rules()
    {
        return array(
            array('title, time', 'required'),
            array('title', 'length', 'max'=>128),
            array('author_id, last_message_id, first_message_id', 'length', 'max'=>10),
            array('author_id, last_message_id, first_message_id', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, title, author_id, time, last_message_id, first_message_id', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'forumMessages' => array(self::HAS_MANY, 'ForumMessage', 'topic_id'),
            'firstMessage' => array(self::BELONGS_TO, 'ForumMessage', 'first_message_id'),
            'author' => array(self::BELONGS_TO, 'User', 'author_id'),
            'lastMessage' => array(self::BELONGS_TO, 'ForumMessage', 'last_message_id'),
        );
    }

    public function pivotModels()
    {
        return array(
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'author_id' => null,
            'time' => Yii::t('app', 'Time'),
            'last_message_id' => null,
            'first_message_id' => null,
            'forumMessages' => null,
            'firstMessage' => null,
            'author' => null,
            'lastMessage' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id, true);
        $criteria->compare('title', $this->title, true);
        $criteria->compare('author_id', $this->author_id);
        $criteria->compare('time', $this->time, true);
        $criteria->compare('last_message_id', $this->last_message_id);
        $criteria->compare('first_message_id', $this->first_message_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}