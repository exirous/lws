<?php

/**
 * This is the model base class for the table "private_message".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PrivateMessage".
 *
 * Columns in table "private_message" available as properties of the model,
 * followed by relations of table "private_message" available as properties of the model.
 *
 * @property string $id
 * @property string $reciever_id
 * @property string $sender_id
 * @property integer $is_deleted_by_reciever
 * @property integer $is_deleted_by_sender
 * @property integer $is_read
 * @property string $text
 * @property string $time
 *
 * @property User $reciever
 * @property User $sender
 */
abstract class BasePrivateMessage extends AActiveRecord
{

    public function getTextColumns()
    {
        return array();
    }

    public function tableName()
    {
        return 'private_message';
    }

    public static function label($n = 1)
    {
        return Yii::t('admin', 'PrivateMessage|PrivateMessages', $n);
    }

    public static function representingColumn()
    {
        return 'text';
    }

    public function rules()
    {
        return array(
            array('reciever_id, sender_id', 'required'),
            array('is_read, is_deleted_by_sender, is_deleted_by_reciever', 'numerical', 'integerOnly'=>true),
            array('reciever_id, sender_id', 'length', 'max'=>10),
            array('text, time', 'safe'),
            array('is_read, is_deleted_by_reciever, is_deleted_by_sender, text, time', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, reciever_id, sender_id, is_read, text, time', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'reciever' => array(self::BELONGS_TO, 'User', 'reciever_id'),
            'sender' => array(self::BELONGS_TO, 'User', 'sender_id'),
        );
    }

    public function pivotModels()
    {
        return array(
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'reciever_id' => null,
            'sender_id' => null,
            'is_read' => Yii::t('app', 'Is Read'),
            'is_deleted_by_sender' => Yii::t('app', 'Is Deleted by sender'),
            'is_deleted_by_reciever' => Yii::t('app', 'Is Deleted by reciever'),
            'text' => Yii::t('app', 'Text'),
            'time' => Yii::t('app', 'Time'),
            'reciever' => null,
            'sender' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id, true);
        $criteria->compare('reciever_id', $this->reciever_id);
        $criteria->compare('sender_id', $this->sender_id);
        $criteria->compare('is_read', $this->is_read);
        $criteria->compare('is_deleted_by_sender', $this->is_read);
        $criteria->compare('is_deleted_by_reciever', $this->is_read);
        $criteria->compare('text', $this->text, true);
        $criteria->compare('time', $this->time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}