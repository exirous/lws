<?php

/**
 * This is the model base class for the table "battle_event".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BattleEvent".
 *
 * Columns in table "battle_event" available as properties of the model,
 * followed by relations of table "battle_event" available as properties of the model.
 *
 * @property string $id
 * @property string $user_id
 * @property string $name
 * @property string $time
 * @property integer $kills
 * @property string $plane
 *
 * @property User $user
 */
abstract class BaseBattleEvent extends AActiveRecord
{

    public function getTextColumns()
    {
        return array();
    }

    public function tableName()
    {
        return 'battle_event';
    }

    public static function label($n = 1)
    {
        return Yii::t('admin', 'BattleEvent|BattleEvents', $n);
    }

    public static function representingColumn()
    {
        return 'name';
    }

    public function rules()
    {
        return array(
            array('user_id', 'required'),
            array('kills', 'numerical', 'integerOnly'=>true),
            array('user_id', 'length', 'max'=>10),
            array('name, plane', 'length', 'max'=>128),
            array('time', 'safe'),
            array('name, time, kills, plane', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, user_id, name, time, kills, plane', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'user' => array(self::BELONGS_TO, 'User', 'user_id'),
        );
    }

    public function pivotModels()
    {
        return array(
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'user_id' => null,
            'name' => Yii::t('app', 'Name'),
            'time' => Yii::t('app', 'Time'),
            'kills' => Yii::t('app', 'Kills'),
            'plane' => Yii::t('app', 'Plane'),
            'user' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id, true);
        $criteria->compare('user_id', $this->user_id);
        $criteria->compare('name', $this->name, true);
        $criteria->compare('time', $this->time, true);
        $criteria->compare('kills', $this->kills);
        $criteria->compare('plane', $this->plane, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}